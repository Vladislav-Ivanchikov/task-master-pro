// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  PENDING_REVIEW
  DONE
}

model User {
  id          String        @id @default(cuid())
  email       String        @unique
  password    String
  name        String?
  surname     String?
  avatarUrl   String?
  role        Role          @default(USER)
  tasks       Task[]        @relation("AssignedTasks")
  ownedBoards Board[]       @relation("BoardOwner")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  BoardMember BoardMember[]
}

model Board {
  id          String        @id @default(cuid())
  title       String
  description String?
  ownerId     String
  owner       User          @relation("BoardOwner", fields: [ownerId], references: [id])
  members     BoardMember[]
  tasks       Task[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String?
}

model BoardMember {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  board     Board    @relation(fields: [boardId], references: [id])
  boardId   String
  role      Role     @default(USER)
  createdAt DateTime @default(now())

  @@unique([userId, boardId])
}

model Task {
  id           String     @id @default(cuid())
  title        String
  description  String?
  boardId      String
  board        Board      @relation(fields: [boardId], references: [id])
  assignedTo   User?      @relation("AssignedTasks", fields: [assignedToId], references: [id])
  assignedToId String?
  status       TaskStatus @default(TODO)
  notes        String?
  files        String[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}
